{"version":3,"sources":["components/NewsList.js","components/Form.js","components/Home.js","components/About.js","services/badintlsources.js","services/badsources.js","services/ussources.js","services/gbsources.js","services/intlsources.js","components/Main.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NewsList","props","className","addClass","newsList","length","map","d","i","src","icon","alt","title","href","url","target","preClass","Form","handleChange","e","console","log","value","setState","state","this","searchInput","onSubmit","type","placeholder","onChange","React","Component","Home","usSearchList","gbSearchList","worldResultList","About","Main","sourceList","JSON","parse","window","localStorage","getItem","searchList","worldSearchList","userInput","makeSourceCall","a","axios","get","response","data","sources","filter","element","badSources","includes","name","id","language","country","setItem","stringify","makeUSCall","queryLink","usSources","articles","badIntlSources","searchItem","image","urlToImage","summary","description","source","makeGBCall","gbSources","translateText","text","post","makeWorldCall","intlSources","makeWorldList","finalTitle","worldListItem","Promise","all","handleClick","preventDefault","exact","path","render","component","Header","class","to","Footer","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b9b55b0.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\n// {'red': props.newsList.length}\nconst NewsList=(props)=> {\n\n  return (\n    <section className= {props.addClass}>\n      <div>\n      {props.newsList.length ? props.newsList.map((d, i) => {\n        return (\n          <div className='news-item' >\n            <img src={d.icon} alt=\"flag\"/>\n            <p>{d.title}</p>\n            <p><a href={d.url} target='blank'>Link</a></p>\n          </div>\n        )\n      }) :\n      <div className={props.preClass}></div>}\n      </div>\n    </section>\n  );\n}\n\nexport default NewsList;\n","import React from 'react'\nimport '../App.css';\n\nclass Form extends React.Component {\n  constructor(props){\n  super(props)\n  this.state = {\n    value: ''\n  }\n}\n\n  handleChange = (e) => {\n    console.log(\"this is handleChange\", e.target.value)\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  render(){\n   console.log('this.props.searchInput', this.props.searchInput)\n    return(\n      <form onSubmit={(e)=>this.props.searchInput(e, this.state.value)}>\n        <input\n          type = 'text'\n          placeholder = 'Type a Topic'\n          onChange = {this.handleChange}\n          value = {this.state.value}\n        />\n        <button type='button'>Compare the News!</button>\n      </form>\n   )\n }\n}\n\nexport default Form\n","import React from 'react';\nimport NewsList from './NewsList.js'\nimport Form from './Form'\nimport '../App.css';\n\nclass Home extends React.Component {\n  constructor(props){\n  super(props)\n  // this.state = {\n  //   value: ''\n  // }\n}\n\n  // handleChange = (e) => {\n  //   console.log(\"this is handleChange\", e.target.value)\n  //   this.setState({\n  //     value: e.target.value\n  //   })\n  // }\n\n  render(){\n  return (\n    <>\n    <div className= 'intro'>\n      <h1 className='title'>NEWSWINDOW <br />How Countries See The News</h1>\n        <div className = 'invitation'><span>Countries around the world see and frame the news differently. <br />Type in a search word to how angles and points of view vary. </span></div>\n\n      <Form\n      searchInput ={this.props.searchInput}  />\n\n      </div>\n\n      <div className ='container'>\n        <NewsList addClass='us-news-list' preClass='us-news-list-pre' newsList={this.props.usSearchList} />\n\n        <NewsList addClass='gb-news-list' preClass='gb-news-list-pre'  newsList={this.props.gbSearchList} />\n\n        <NewsList addClass='world-news-list' preClass='world-news-list-pre' newsList={this.props.worldResultList} />\n      </div>\n\n    </>\n  );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\n\nfunction About(props) {\n  console.log('this is About: props', props)\n  return (\n    <div>\n      <h2>About This Project</h2>\n    </div>\n  );\n}\n\nexport default About;\n","export default [\n  'Globalnews.ca', 'engadget', 'mashable','reddit-r-all' , 'the-wall-street-journal', 'Gizmodo.com', 'Insider.com', 'Boingboing.net', 'Yahoo.com', 'Huffpost.com', 'Economist.com', 'Ctvnews.ca', 'Thesun.co.uk', 'Lifehacker.com' , 'Kinja.com', 'Youtube.com', 'Aol.com', 'Hackaday.com', 'Theatlantic.com', 'Fastcompany.com' , 'Npr.org', 'Readwrite.com', 'Slashdot.org', 'Androidcentral.com',   'Theintercept.com',  'Salon.com',  'Washingtonexaminer.com' , 'Slate.com', 'The Next Web', 'Lfpress.com', 'castanet.net', 'Cnet.com', 'Jerseyeveningpost.com', 'Thetakeout.com', 'Express.co.uk', 'Gmanetwork.com' , 'Wpxi.com',   'Newyorker.com', 'Jezebel.com', 'Vox.com', 'Macrumors.com',  'Rollingstone.com', 'Frandroid.com' , 'Refinery29.com',  'Qz.com',  'Thinkprogress.org' ,  'Sfgate.com'  ,  'Msn.com', 'Facebook.com'\n]\n","export default [\n  'business-insider', 'engadget',\n  'Globalnews.ca', 'mashable','reddit-r-all' , 'the-wall-street-journal', 'Gizmodo.com', 'Insider.com', 'Boingboing.net', 'Yahoo.com', 'Huffpost.com', 'Economist.com', 'Ctvnews.ca', 'Thesun.co.uk', 'Lifehacker.com' , 'Kinja.com', 'Youtube.com', 'Aol.com', 'Hackaday.com', 'Fastcompany.com' , 'Readwrite.com', 'Slashdot.org', 'Androidcentral.com',   'Theintercept.com',   'Washingtonexaminer.com', 'The Next Web', 'Lfpress.com', 'Castanet.net', 'Cnet.com', 'Jerseyeveningpost.com', 'Thetakeout.com', 'Express.co.uk', 'Gmanetwork.com' , 'Wpxi.com',   'Newyorker.com', 'Jezebel.com', 'Vox.com', 'Macrumors.com',  'Rollingstone.com', 'Frandroid.com' , 'Refinery29.com',  'Qz.com',  'Thinkprogress.org' ,  'Sfgate.com'  ,  'Msn.com', 'Facebook.com'\n]\n","export default 'washingtonpost.com,cnn.com,latimes.com,msnbc.com, foxnews.com,ap.org,nytimes.com,newyorker.com,npr.org,nypost.com,boston.com,usatoday.com'\n","export default 'bbc.co.uk,guardian.com,dailymail.co.uk,independent.co.uk,telegraph.co.uk,mirror.co.uk,metro.co.uk'\n","export default 'lemonde.fr,tagesspiegel.de,zeit.de,elmundo.es,globo.com,handelsblatt.com,lagaceta.com.ar,repubblica.it,lenta.ru,lesechos.fr,liberation.fr,news24.com,rbc.ru,rtlnieuws.nl,spiegel.de,svd.se,thehindu.com,jpost.com,wiwo.de,xinhuanet.com,elpais.es,smh.com.au,theage.com.au,scmp.com,timesofindia.indiatimes.com,thehindu.com'\n","import React from 'react';\nimport '../App.css';\nimport Home from './Home'\nimport About from './About'\nimport badIntlSources from '../services/badintlsources';\nimport badSources from '../services/badsources';\nimport usSources from '../services/ussources';\nimport gbSources from '../services/gbsources';\nimport intlSources from '../services/intlsources';\nimport axios from 'axios'\nimport { Route, Switch } from 'react-router-dom'\n\n\nclass Main extends React.Component {\n  state = {\n    sourceList: JSON.parse(window.localStorage.getItem('sourceList')) || [],\n    newsList:[],\n    searchList:[],\n    usSearchList:[],\n    gbSearchList:[],\n    worldSearchList:[],\n    worldResultList:[],\n    userInput:''\n  }\n\n  makeSourceCall = async()=>{\n    let queryLink = 'https://newsapi.org/v2/sources?apiKey=ded05226f8e9489888443d1b682e93c6'\n    const response = await axios.get(queryLink)\n    let sourceList = response.data.sources\n      .filter(element => !badSources.includes(element.name))\n      .map((d,i)=>{\n        let sourceItem = {\n          id: d.id,\n          name: d.name,\n          url: d.url,\n          language: d.language,\n          country: d.country\n        }\n        return sourceItem\n      });\n      window.localStorage.setItem('sourceList', JSON.stringify(sourceList))\n      this.setState({\n        sourceList: sourceList\n      });\n  }\n\n\n  makeUSCall = async(userInput)=>{\n    console.log('this is USCall')\n    let queryLink = 'https://newsapi.org/v2/everything?q='\n    + userInput\n    +'&domains='\n    + usSources\n    +'&sortBy=popularity&pageSize=15&apiKey=ded05226f8e9489888443d1b682e93c6'\n    const response = await axios.get(queryLink)\n    console.log('this is US response', response)\n    let usSearchList = response.data.articles\n      .filter(element => !badIntlSources.includes(element.name))\n      .map((d,i) => {\n        let searchItem = {\n          title: d.title,\n          url:d.url,\n          image: d.urlToImage,\n          summary: d.description,\n          id: d.source.id,\n          name: d.source.name,\n          icon: 'http://www.geonames.org/flags/x/us.gif'\n        }\n      console.log(searchItem.name);\n      return searchItem;\n    })\n      this.setState({\n        usSearchList: usSearchList\n      })\n  }\n\n\n  makeGBCall = async(userInput)=>{\n    console.log('this is USCall')\n    let queryLink = 'https://newsapi.org/v2/everything?q='\n    + userInput\n    +'&domains='\n    + gbSources\n    +'&sortBy=popularity&pageSize=15&apiKey=ded05226f8e9489888443d1b682e93c6'\n    const response = await axios.get(queryLink)\n    console.log('this is GB response', response)\n    let gbSearchList = response.data.articles\n      .filter(element => !badIntlSources.includes(element.name))\n      .map((d,i) => {\n        let searchItem = {\n          title: d.title,\n          url:d.url,\n          image: d.urlToImage,\n          summary: d.description,\n          id: d.source.id,\n          name: d.source.name,\n          icon: 'https://i.imgur.com/56urXdl.png'\n        }\n      console.log(searchItem.name);\n      return searchItem;\n    })\n      this.setState({\n        gbSearchList: gbSearchList\n      })\n  }\n\n\n  translateText = async (text) => {\n    let queryLink = 'https://translate.yandex.net/api/v1.5/tr.json/translate?key=trnsl.1.1.20190827T203759Z.5526d2e4bd7cba98.4a7c48b1d1c3898045ae0697422b0cb8578be0bd&text='+ text +'&lang=en'\n    const response = await axios.post(queryLink)\n    return response.data.text[0];\n  }\n\n\n  makeWorldCall = async(userInput)=>{\n    console.log('this is World Call')\n    let queryLink = 'https://newsapi.org/v2/everything?q='\n    + userInput\n    +'&domains='\n    + intlSources\n    +'&sortBy=popularity&pageSize=15&apiKey=ded05226f8e9489888443d1b682e93c6'\n    const response = await axios.get(queryLink)\n    console.log('this is World response', response)\n    let worldSearchList = response.data.articles\n      .filter(element => !badIntlSources.includes(element.name))\n      .map((d,i) => {\n        let searchItem = {\n          title: d.title,\n          url:d.url,\n          image: d.urlToImage,\n          summary: d.description,\n          id: d.source.id,\n          name: d.source.name\n        }\n      console.log(searchItem.name);\n      return searchItem;\n    })\n      this.setState({\n        worldSearchList: worldSearchList\n      })\n  }\n\n\n  makeWorldList= async ()=>{\n    let worldResultList = await this.state.worldSearchList\n      .map(async (d,i) => {\n        let finalTitle = await this.translateText(d.title);\n        let worldListItem = {\n         title: finalTitle,\n         url:d.url,\n         summary:d.description,\n         name:d.name,\n         icon: 'https://i.imgur.com/l2HFjvA.png'\n       }\n      return worldListItem\n    });\n      worldResultList = await Promise.all(worldResultList);\n      console.log(worldResultList);\n      this.setState({\n        worldResultList: worldResultList\n      })\n  }\n\n    handleClick = async (e, userInput) =>{\n      e.preventDefault()\n      console.log(\"Search term submitted\", userInput);\n      await this.makeWorldCall(userInput);\n      await this.makeUSCall(userInput);\n      await this.makeGBCall(userInput);\n      await this.makeWorldList();\n    }\n\n\n  componentDidMount(){\n    console.log('sourcelist',this.state.sourceList)\n    if (this.state.sourceList.length === 0) {\n      this.makeSourceCall();\n    }\n    console.log('componentDidMount')\n  }\n\n  render(){\n  return (\n    <main>\n      <Switch>\n        <Route exact path='/' render={(props)=><Home\n        searchInput={this.handleClick}\n        usSearchList={this.state.usSearchList}\n        gbSearchList={this.state.gbSearchList}\n        worldResultList = {this.state.worldResultList}/> }\n        />\n        <Route path='/about' component={About} />\n      </Switch>\n    </main>\n    );\n  }\n}\nexport default Main\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../App.css';\n\nfunction Header (props) {\n\n  return (\n     <header class=\"topnav\" id=\"myTopnav\">\n       <li ><Link to=\"/\">Home</Link></li>\n       <li ><Link to=\"/about\">About This Project</Link></li>\n       <li ><Link to=\"/about\">How to Contribute</Link></li>\n     </header>\n\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../App.css';\n\nfunction Footer (props) {\n\n\n  return (\n     <footer>\n       <li>&copy; 2019 Marie-France Han</li>\n       <li ><Link to=\"/\">Home</Link></li>\n       <li ><Link to=\"/about\">About This Project</Link></li>\n     </footer>\n\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nfunction App() {\n  return (\n    <body>\n      <div className=\"App\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    </body>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}